#!/usr/bin/env perl

use strict;
use warnings;
use 5.020;

use File::Slurp qw(read_file write_file);
use SNMP;

if ( not -d '/srv/www/snmp' ) {
	mkdir('/srv/www/snmp');
}

my $rate      = 10;
my $community = $ENV{SNMP_COMMUNITY}
  // read_file('/etc/dorfmap/community.edge') // 'public';
chomp($community);

my $sess = SNMP::Session->new(
	DestHost  => 'edge',
	Community => $community,
	Version   => 1,
);

my @interfaces = (
	[ 'bond0.3', 7 ],
	[ 'bond0.2', 8 ],
	[ 'bond0.1', 9 ],
	[ 'bond0.6', 10 ],
	[ 'tun0',    12 ],
);

my ( $prev_in, $prev_out ) = ( 0, 0 );

while (1) {
	for my $interface (@interfaces) {
		my ( $if_name, $if_num ) = @{$interface};

		#my $snmp_name   = $sess->get("iso.3.6.1.2.1.2.2.1.2.${if_num}");
		#my $snmp_status = $sess->get("iso.3.6.1.2.1.2.2.1.8.${if_num}");
		my $snmp_in  = $sess->get("iso.3.6.1.2.1.2.2.1.10.${if_num}");
		my $snmp_out = $sess->get("iso.3.6.1.2.1.2.2.1.16.${if_num}");

		if ( $if_name eq 'bond0.2' ) {
			my $in_rate  = ( $snmp_in - $prev_in ) / $rate;
			my $out_rate = ( $snmp_out - $prev_out ) / $rate;

			if ( $in_rate >= 0 and $out_rate >= 0 ) {
				write_file( '/srv/www/snmp/ops_in',
					sprintf( '%.f', $in_rate ) );
				write_file( '/srv/www/snmp/ops_out',
					sprintf( '%.f', $out_rate ) );
			}

			$prev_in  = $snmp_in;
			$prev_out = $snmp_out;
		}

		write_file( "/srv/www/snmp/${if_name}_in",  $snmp_in );
		write_file( "/srv/www/snmp/${if_name}_out", $snmp_out );
	}
	sleep($rate);
}
