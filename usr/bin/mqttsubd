#!/usr/bin/env perl

use strict;
use warnings;
use 5.010;

use File::Slurp qw(read_file write_file);
use Net::MQTT::Simple;

my $mqtt_prefix = '/srv/www/mqtt';
my $mqtt        = Net::MQTT::Simple->new('mqttserver');

sub slurp {
	my ($file) = @_;

	my $content = read_file( $file, err_mode => 'quiet' );
	if ( defined $content ) {
		chomp $content;
	}
	return $content;
}

if (not -d $mqtt_prefix) {
	mkdir($mqtt_prefix);
}

$mqtt->run(
	'sensors/+/temperature' => sub {
		my ($topic, $message) = @_;
		my ($sensor) = ($topic =~ m{ ^ sensors / ( [a-zA-Z0-9_-]+ ) / temperature $ }x);
		if ($message > -20) {
			write_file("${mqtt_prefix}/${sensor}.degc", $message);
		}
	},
	'sensors/+/temperature/+' => sub {
		my ($topic, $message) = @_;
		my ($sensor, $subsensor) = ($topic =~ m{ ^ sensors / ( [a-zA-Z0-9_-]+ ) / temperature / ( [a-zA-Z0-9_-]+ ) $ }x);
		if ($message > -20) {
			write_file("${mqtt_prefix}/${sensor}_${subsensor}.degc", $message);
		}
	},
	'sensors/+/luchs' => sub {
		my ($topic, $message) = @_;
		my ($sensor) = ($topic =~ m{ ^ sensors / ( [a-zA-Z0-9_-]+ ) / luchs $ }x);
		if ($message >= 0) {
			write_file("${mqtt_prefix}/${sensor}.lux", $message);
		}
	}
);
