#!/bin/sh

case "${1}" in
feedback1)

cd /tmp/feedback1
( cat 1 2 3 4 5 6 7 8 9 10 11 12 13; echo "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0" ) | /usr/lib/dorfmap/dorfbus-write-bit

;;
feedback3)

cd /tmp/feedback3
( cat 1 2 3 4 5 6 7 8 9 10 11 12; echo "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n1\n1" ) | /usr/lib/dorfmap/dorfbus-write-bit

;;
feedback4)

cd /tmp/feedback4
cat /tmp/feedback4/commands | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback5)

cd /tmp/feedback5
( cat 1 2 3 4 5 6 7 8; echo "0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n0\n1\n0\n0\n1" ) | /usr/lib/dorfmap/dorfbus-write-bit

;;
feedback6)

cd /tmp/feedback6
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $( cat bin3) << 3 ) | ( $(cat bin5) << 5 ) | ( $(cat bin6) << 6 ) | ( $(cat bin7) << 7 ) ));
cat pwm0 pwm1 pwm2; echo "0\n10" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback7)

cd /tmp/feedback7
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $(cat bin2) << 5 ) | ( $(cat bin3) << 6 ) | ( $(cat bin4) << 7 ) ));
echo $(( ( $(cat bin5) ) | ( $(cat bin6) << 1 ) | ( $(cat bin7) << 4 ) | ( $(cat bin8) << 6 ) ));
cat pwm0 pwm1 pwm2 pwm3; echo "0\n12" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback8)

cd /tmp/feedback8
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $(cat bin2) << 5 ) | ( $(cat bin3) << 6 ) | ( $(cat bin4) << 7 ) ));
echo $(( ( $(cat bin5) ) | ( $(cat bin6) << 1 ) | ( $(cat bin7) << 4 ) | ( $(cat bin8) << 6 ) ));
cat pwm0 pwm1 pwm2 pwm3; echo "0\n13" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback9)

cd /tmp/feedback9
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $(cat bin2) << 5 ) | ( $(cat bin3) << 6 ) | ( $(cat bin4) << 7 ) ));
echo $(( ( $(cat bin5) ) | ( $(cat bin6) << 1 ) | ( $(cat bin7) << 4 ) | ( $(cat bin8) << 6 ) ));
cat pwm0 pwm1 pwm2 pwm3; echo "0\n14" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback10)

cd /tmp/feedback10
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $(cat bin2) << 5 ) | ( $(cat bin3) << 6 ) | ( $(cat bin4) << 7 ) ));
echo $(( ( $(cat bin5) << 4 ) | ( $(cat bin6) << 6 ) ));
cat pwm0 pwm1 pwm2 pwm3; echo "0\n15" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
feedback11)

cd /tmp/feedback11
( echo $(( ( $(cat bin0) ) | ( $(cat bin1) << 1 ) | ( $(cat bin2) << 5 ) | ( $(cat bin3) << 6 ) | ( $(cat bin4) << 7 ) ));
echo $(( ( $(cat bin5) ) | ( $(cat bin6) << 1 ) | ( $(cat bin7) << 4 ) | ( $(cat bin8) << 6 ) ));
cat pwm0 pwm1 pwm2 pwm3; echo "0\n18" ) | /usr/lib/dorfmap/dorfbus-write-byte

;;
donationprint1)

cd /tmp/donationprint1
(echo "$(cat /etc/dorfmap/pw.avrshift) $(cat 11)" ) | nc -w 4 donationprint 1337

;;
donationprint2)

cd /tmp/donationprint2
( echo "$(cat /etc/dorfmap/pw.blinkencontrol)"; cat commands ) | nc -w 1 donationprint 1337

;;
helios1)

cd /tmp/helios1
if [ "$(cat "$2")" = 1 ]; then
	echo "$(cat /etc/dorfmap/pw.powerswitch)" on "$2" | nc -w 4 helios 1338
else
	echo "$(cat /etc/dorfmap/pw.powerswitch)" off "$2" | nc -w 4 helios 1338
fi

;;
beamer1)

cd /tmp/beamer1
if [ "$(cat "$2")" = 1 ]; then
	/bin/echo -e "\x02PON\x03" > /dev/ttyUSB0 &
else
	/bin/echo -e "\x02POF\x03" > /dev/ttyUSB0 &
fi

;;

*)

echo "unable to handle arguments '$@' on $(date)" >> /tmp/dorfmap-err/dorfbus-write
env >> /tmp/dorfmap-err/dorfbus-write
echo "" >> /tmp/dorfmap-err/dorfbus-write

;;
esac
